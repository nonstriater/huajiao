/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "living-Structs.h"


@interface IMUtil : XXUnknownSuperclass {
}
+(id)getCurTimeString;	// 0xab1901
+(long long)createSN;	// 0xab1825
+(id)getMd5_32Bit_String:(id)string;	// 0xab16ad
+(id)unzipData:(id)data;	// 0xab1689
+(id)zipData:(id)data;	// 0xab1665
+(void)NSDataToStlString:(id)stlString Return:(void*)aReturn;	// 0xab1571
+(id)getSystemTimeStamp;	// 0xab13bd
+(id)getOldDateString:(int)string;	// 0xab11f5
+(id)getDateString;	// 0xab1041
+(id)URLDecodedString:(id)string;	// 0xab100d
+(id)URLEncodedString:(id)string;	// 0xab0fd1
+(BOOL)isStringEmpty:(id)empty ignoreWhiteapce:(BOOL)whiteapce;	// 0xab0e75
+(BOOL)isStringEmpty:(id)empty;	// 0xab0db5
+(id)jsonDecode:(id)decode;	// 0xab0c65
+(id)jsonEncode:(id)encode;	// 0xab0b55
+(int)getCurSystemSecond;	// 0xab0a05
+(void)copyDictionary:(id)dictionary From:(id)from;	// 0xab0855
+(void)convertNSData:(id)data toStlString:(void*)stlString;	// 0xab0749
+(id)getStateName:(int)name;	// 0xab06ed
+(int)getInt32FromNetData:(id)netData;	// 0xab06c1
+(long long)getInt64FromNetData:(id)netData;	// 0xab0629
+(BOOL)getBoolFromDict:(id)dict Key:(id)key;	// 0xab04f1
+(id)getDataFromDict:(id)dict Key:(id)key;	// 0xab03c1
+(id)getStringFromDict:(id)dict Key:(id)key;	// 0xab0285
+(long long)getInt64FromDict:(id)dict Key:(id)key;	// 0xab0145
+(int)getInt32FromDict:(id)dict Key:(id)key;	// 0xab000d
+(BOOL)hasSubString:(id)string Data:(id)data;	// 0xaafecd
+(int)getPayloadType:(id)type;	// 0xaafea1
+(BOOL)hasSuccessFlag:(id)flag;	// 0xaafe69
+(id)createRandomString:(int)string;	// 0xaafde5
+(id)CharsToNSData:(const char*)nsdata withLength:(unsigned)length;	// 0xaafdc5
+(id)CharsToNSString:(const char*)nsstring;	// 0xaafda9
+(const char*)NSStringToChars:(id)chars;	// 0xaafce9
+(int)NSStringToInt:(id)int;	// 0xaafcd1
+(id)IntToNSString:(int)nsstring;	// 0xaafca1
+(id)NSStringToNSData:(id)nsdata;	// 0xaafc79
+(id)NSDataToNSString:(id)nsstring;	// 0xaafb91
+(id)rc4DecodeToString:(const void*)string Key:(id)key;	// 0xaafa15
+(id)rc4Decode:(id)decode Key:(id)key Return:(void*)aReturn;	// 0xaaf845
+(id)rc4DecodeFromStdString:(const void*)stdString Key:(id)key Return:(void*)aReturn;	// 0xaaf809
+(id)rc4EncodeFromNSData:(id)nsdata Key:(id)key;	// 0xaaf4c5
+(id)rc4EncodeFromString:(void*)string Key:(id)key Return:(void*)aReturn;	// 0xaaf489
+(id)rc4Encode:(id)encode Key:(id)key Return:(void*)aReturn;	// 0xaaf2e1
+(id)rc4Data:(void*)data Key:(id)key Return:(basic_string<char, std::char_traits<char>, std::allocator<char> >*)aReturn;	// 0xaaf091
@end

