/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "NSStreamDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "living-Structs.h"
#import "GCDAsyncSocketDelegate.h"

@class IMFeatureGroupChat, IMConfigData, NSString, NSTimer, NSCondition, NSUserDefaults, IMFeatureCircleChat, IMProtoRegistry, IMProtoServiceInner, IMProtoPrivateChat, IMFeatureWebInterface, IMFeatureUserInfo, IMProtoMessage, IMProtoUserInfo, NSMutableDictionary, IMFeaturePrivateChat, NSDate, IMFeaturePeerChat, NSOperationQueue, IMProtoGroupChat, IMProtoRelation, NSObject, IMProtoWeb, GCDAsyncSocket, IMFeatureRelation, IMProtoCircleChat, IMFeatureChatRoom, NSData, IMProtoVoiceCallProxy, IMProtoChatRoom;
@protocol IMNotifyDelegate, OS_dispatch_queue;

@interface IMUser : XXUnknownSuperclass <GCDAsyncSocketDelegate, NSStreamDelegate> {
	NSData* _heartBeat;
	NSDate* _lastHeartBeatTime;
	NSDate* _lastHBAckTime;
	NSDate* _checkHBAckLock;
	NSMutableDictionary* _inboxLastGetInfoTimeDict;
	NSDate* _lastCheckGetInfoTime;
	NSString* _userSettingKey;
	double local1;
	double local2;
	BOOL _isStop;
	IMConfigData* _configData;
	id<IMNotifyDelegate> _notifyReceiver;
	IMFeatureWebInterface* _webFeature;
	IMFeatureUserInfo* _userInfoFeature;
	IMFeaturePeerChat* _peerFeature;
	IMFeatureGroupChat* _groupChatFeature;
	IMFeatureChatRoom* _chatRoomFeatrue;
	IMFeatureCircleChat* _circleChatFeature;
	IMFeatureRelation* _relationFeature;
	IMFeaturePrivateChat* _privatechatFeature;
	IMProtoRegistry* _protoRegistry;
	IMProtoWeb* _protoWeb;
	IMProtoUserInfo* _protoUserInfo;
	IMProtoMessage* _protoMessage;
	IMProtoVoiceCallProxy* _protoVoiceCallProxy;
	IMProtoServiceInner* _protoServiceInner;
	IMProtoGroupChat* _protoGroupChat;
	IMProtoChatRoom* _protoChatRoom;
	IMProtoCircleChat* _protoCircleChat;
	IMProtoRelation* _protoRelation;
	IMProtoPrivateChat* _protoPrivateChat;
	int _timerInterval;
	int _curState;
	int _loginFailReason;
	NSOperationQueue* _operationQueue;
	NSCondition* _syncCondition;
	int _syncFlag;
	NSTimer* _monitorTimer;
	NSTimer* _checkHBTimer;
	GCDAsyncSocket* _asyncSocket;
	NSObject<OS_dispatch_queue>* _backgroundQueue;
	NSDate* _lastTryConnectTime;
	int _waitSeconds;
	NSMutableDictionary* _serverData;
	NSUserDefaults* _userDefaults;
	NSMutableDictionary* _userSetting;
	int _getInfoOffset;
	int _lastLoginedTimestamp;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(readonly, assign) int getInfoOffset;	// G=0xa76161; 
@property(retain) NSMutableDictionary* userSetting;	// G=0xa7613d; S=0xa76151; 
@property(retain) NSUserDefaults* userDefaults;	// G=0xa76119; S=0xa7612d; 
@property(retain) NSMutableDictionary* serverData;	// G=0xa760f5; S=0xa76109; 
@property(readonly, assign) int waitSeconds;	// G=0xa760e5; 
@property(retain) NSDate* lastTryConnectTime;	// G=0xa760c1; S=0xa760d5; 
@property(assign) int timerInterval;	// G=0xa75f69; S=0xa75f79; 
@property(retain) NSTimer* checkHBTimer;	// G=0xa76055; S=0xa76069; 
@property(retain) NSTimer* monitorTimer;	// G=0xa76031; S=0xa76045; 
@property(retain) NSObject<OS_dispatch_queue>* backgroundQueue;	// G=0xa7609d; S=0xa760b1; 
@property(retain) GCDAsyncSocket* asyncSocket;	// G=0xa76079; S=0xa7608d; 
@property(assign) int syncFlag;	// G=0xa76011; S=0xa76021; 
@property(retain) NSCondition* syncCondition;	// G=0xa75fed; S=0xa76001; 
@property(retain) NSOperationQueue* operationQueue;	// G=0xa75fc9; S=0xa75fdd; 
@property(assign) int loginFailReason;	// G=0xa75fa9; S=0xa75fb9; 
@property(assign) int curState;	// G=0xa75f89; S=0xa75f99; 
@property(assign) BOOL isStop;	// G=0xa75c51; S=0xa75c65; 
@property(retain) IMFeaturePrivateChat* privatechatFeature;	// G=0xa75db9; S=0xa75dcd; 
@property(retain) IMFeatureRelation* relationFeature;	// G=0xa75d95; S=0xa75da9; 
@property(retain) IMFeatureCircleChat* circleChatFeature;	// G=0xa75d71; S=0xa75d85; 
@property(retain) IMFeatureChatRoom* chatRoomFeatrue;	// G=0xa75d4d; S=0xa75d61; 
@property(retain) IMFeatureGroupChat* groupChatFeature;	// G=0xa75d29; S=0xa75d3d; 
@property(retain) IMFeaturePeerChat* peerFeature;	// G=0xa75d05; S=0xa75d19; 
@property(retain) IMFeatureUserInfo* userInfoFeature;	// G=0xa75ce1; S=0xa75cf5; 
@property(retain) IMFeatureWebInterface* webFeature;	// G=0xa75cbd; S=0xa75cd1; 
@property(assign) int lastLoginedTimestamp;	// G=0xa76171; S=0xa76181; 
@property(retain) IMProtoPrivateChat* protoPrivateChat;	// G=0xa75f45; S=0xa75f59; 
@property(retain) IMProtoRelation* protoRelation;	// G=0xa75f21; S=0xa75f35; 
@property(retain) IMProtoCircleChat* protoCircleChat;	// G=0xa75efd; S=0xa75f11; 
@property(retain) IMProtoChatRoom* protoChatRoom;	// G=0xa75ed9; S=0xa75eed; 
@property(retain) IMProtoGroupChat* protoGroupChat;	// G=0xa75eb5; S=0xa75ec9; 
@property(retain) IMProtoServiceInner* protoServiceInner;	// G=0xa75e91; S=0xa75ea5; 
@property(retain) IMProtoVoiceCallProxy* protoVoiceCallProxy;	// G=0xa75e6d; S=0xa75e81; 
@property(retain) IMProtoMessage* protoMessage;	// G=0xa75e49; S=0xa75e5d; 
@property(retain) IMProtoUserInfo* protoUserInfo;	// G=0xa75e25; S=0xa75e39; 
@property(retain) IMProtoWeb* protoWeb;	// G=0xa75e01; S=0xa75e15; 
@property(retain) IMProtoRegistry* protoRegistry;	// G=0xa75ddd; S=0xa75df1; 
@property(retain) id<IMNotifyDelegate> notifyReceiver;	// G=0xa75c99; S=0xa75cad; 
@property(retain) IMConfigData* configData;	// G=0xa75c75; S=0xa75c89; 
-(void).cxx_destruct;	// 0xa76191
-(void)dealloc;	// 0xa75b8d
-(id)getTraceID:(id)anId;	// 0xa75a45
-(void)postNSStringLog:(id)log;	// 0xa759fd
-(void)postNSDataLog:(id)log;	// 0xa758dd
-(void)sendBackLog:(id)log;	// 0xa757d1
-(void)writeLog:(id)log;	// 0xa756ed
-(void)createQueryInboxTask:(id)task StartID:(long long)anId;	// 0xa754e5
-(void)handleServerData:(id)data;	// 0xa7473d
-(void)handlePrivateNotify:(id)notify Inbox:(id)inbox MsgID:(long long)anId SN:(long long)sn;	// 0xa73f7d
-(void)handle_chatroom_quit_notify:(id)notify SN:(long long)sn;	// 0xa73cb5
-(void)handle_chatroom_join_notify:(id)notify SN:(long long)sn;	// 0xa738d5
-(void)handle_chatroom_send_msg:(id)msg SN:(long long)sn;	// 0xa73429
-(void)socket:(id)socket didWriteDataWithTag:(long)tag;	// 0xa73425
-(void)socketDidCloseReadStream:(id)socket;	// 0xa73345
-(void)socketDidDisconnect:(id)socket withError:(id)error;	// 0xa73229
-(void)socket:(id)socket didReadData:(id)data withTag:(long)tag;	// 0xa72599
-(void)socket:(id)socket didConnectToHost:(id)host port:(unsigned short)port;	// 0xa7243d
-(void)setSignal:(int)signal;	// 0xa72379
-(BOOL)sendRequest:(id)request Tag:(long)tag Wait:(BOOL)wait WaitSecond:(int)second;	// 0xa71ea9
-(void)execTask:(id)task;	// 0xa706e9
-(void)notifyDelegateStateChange:(int)change From:(int)from;	// 0xa70489
-(void)notifyDelegateMessage:(id)message;	// 0xa6fb65
-(void)reachabilityChanged:(int)changed;	// 0xa6fad5
-(BOOL)sendRegularGetInfoRequest;	// 0xa6f8d1
-(void)checkHBAckTimer:(id)timer;	// 0xa6f715
-(void)checkStateTimer:(id)timer;	// 0xa6f4cd
-(void)startTimer;	// 0xa6f379
-(void)handleTask:(int)task Message:(id)message Cancelled:(BOOL)cancelled;	// 0xa6eb89
-(void)handleDisconnectState;	// 0xa6eb75
-(void)handleConnectedState;	// 0xa6e961
-(void)handleConnectingState;	// 0xa6e631
-(void)handleInitState;	// 0xa6e0c9
-(void)handleCurState;	// 0xa6dd15
-(void)addWeimiTask:(id)task;	// 0xa6dc1d
-(void)addStateTask:(int)task;	// 0xa6db8d
-(int)addSendTask:(id)task;	// 0xa6dafd
-(void)addTask:(int)task Message:(id)message;	// 0xa6da79
-(void)addTask:(id)task;	// 0xa6da15
-(BOOL)isConnected;	// 0xa6d9f5
-(void)stopService;	// 0xa6d4e1
-(BOOL)startWithHB:(int)hb;	// 0xa6d48d
-(BOOL)startService;	// 0xa6d215
-(long long)getLastMsgID:(id)anId;	// 0xa6d171
-(long long)getStartReadID:(id)anId;	// 0xa6d0cd
-(void)updateLastReadID:(id)anId Value:(long long)value Flush:(BOOL)flush;	// 0xa6d049
-(void)updateUserSetting:(id)setting Value:(id)value Flush:(BOOL)flush;	// 0xa6cf49
-(void)loadUserSetting;	// 0xa6cca9
-(void)initMembers;	// 0xa6c679
-(id)copyWithZone:(NSZone*)zone;	// 0xa6c5dd
-(id)initWithDelegate:(id)delegate;	// 0xa6c575
-(id)init;	// 0xa6c531
@end

