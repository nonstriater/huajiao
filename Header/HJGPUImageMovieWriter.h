/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "living-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "GPUImageVideoCameraDelegate.h"
#import "GPUImageInput.h"

@class NSObject, GLProgram, NSString, NSArray, NSURL, AVAssetWriter, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor, GPUImageContext, GPUImageFramebuffer;
@protocol GPUImageMovieWriterDelegate, OS_dispatch_queue, QHIVStreamPickerDelegate;

@interface HJGPUImageMovieWriter : XXUnknownSuperclass <GPUImageInput, GPUImageVideoCameraDelegate> {
	BOOL alreadyFinishedRecording;
	NSURL* movieURL;
	NSString* fileType;
	AVAssetWriter* assetWriter;
	AVAssetWriterInput* assetWriterAudioInput;
	AVAssetWriterInput* assetWriterVideoInput;
	AVAssetWriterInputPixelBufferAdaptor* assetWriterPixelBufferInput;
	GPUImageContext* _movieWriterContext;
	CVBufferRef renderTarget;
	CVBufferRef renderTexture;
	CGSize videoSize;
	int inputRotation;
	unsigned movieFramebuffer;
	unsigned movieRenderbuffer;
	GLProgram* colorSwizzlingProgram;
	int colorSwizzlingPositionAttribute;
	int colorSwizzlingTextureCoordinateAttribute;
	int colorSwizzlingInputTextureUniform;
	GPUImageFramebuffer* firstInputFramebuffer;
	XXStruct_pwHToB startTime;
	XXStruct_pwHToB previousFrameTime;
	XXStruct_pwHToB previousAudioTime;
	NSObject<OS_dispatch_queue>* audioQueue;
	NSObject<OS_dispatch_queue>* videoQueue;
	BOOL audioEncodingIsFinished;
	BOOL videoEncodingIsFinished;
	BOOL isRecording;
	opaqueCMSampleBuffer* sbufCurrentFrame;
	BOOL _hasAudioTrack;
	BOOL _encodingLiveVideo;
	BOOL _shouldPassthroughAudio;
	BOOL enabled;
	BOOL _shouldInvalidateAudioSampleWhenDone;
	BOOL _paused;
	id completionBlock;
	id failureBlock;
	id videoInputReadyCallback;
	id audioInputReadyCallback;
	id<GPUImageMovieWriterDelegate> _delegate;
	id _audioProcessingCallback;
	id<QHIVStreamPickerDelegate> _pickerDelegate;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign, nonatomic) __weak id<QHIVStreamPickerDelegate> pickerDelegate;	// G=0x7f4a8d; S=0x7f4aad; 
@property(retain, nonatomic) GPUImageContext* movieWriterContext;	// G=0x7f4a11; S=0x7f4a21; 
@property(assign, nonatomic, getter=isPaused) BOOL paused;	// G=0x7f49f1; S=0x7f4a01; 
@property(copy, nonatomic) NSArray* metaData;	// G=0x7f47e5; S=0x7f4805; 
@property(assign, nonatomic) CGAffineTransform transform;	// G=0x7f484d; S=0x7f4885; 
@property(readonly, assign, nonatomic) XXStruct_pwHToB duration;	// G=0x7f482d; 
@property(readonly, assign, nonatomic) AVAssetWriter* assetWriter;	// G=0x7f48cd; 
@property(assign, nonatomic) BOOL enabled;	// G=0x7f49b1; S=0x7f49c1; 
@property(copy, nonatomic) id audioProcessingCallback;	// G=0x7f4a69; S=0x7f4a7d; 
@property(copy, nonatomic) id audioInputReadyCallback;	// G=0x7f498d; S=0x7f49a1; 
@property(copy, nonatomic) id videoInputReadyCallback;	// G=0x7f4969; S=0x7f497d; 
@property(assign, nonatomic) BOOL encodingLiveVideo;	// G=0x7f48f1; S=0x7f334d; 
@property(assign, nonatomic) id<GPUImageMovieWriterDelegate> delegate;	// G=0x7f4a49; S=0x7f4a59; 
@property(copy, nonatomic) id failureBlock;	// G=0x7f4945; S=0x7f4959; 
@property(copy, nonatomic) id completionBlock;	// G=0x7f4921; S=0x7f4935; 
@property(assign, nonatomic) BOOL shouldInvalidateAudioSampleWhenDone;	// G=0x7f49d1; S=0x7f49e1; 
@property(assign, nonatomic) BOOL shouldPassthroughAudio;	// G=0x7f4901; S=0x7f4911; 
@property(assign, nonatomic) BOOL hasAudioTrack;	// G=0x7f48e1; S=0x7f47cd; 
-(void).cxx_destruct;	// 0x7f4ac1
-(void)setHasAudioTrack:(BOOL)track audioSettings:(id)settings;	// 0x7f47e1
-(void)setCurrentlyReceivingMonochromeInput:(BOOL)input;	// 0x7f47c9
-(BOOL)wantsMonochromeInput;	// 0x7f47c5
-(BOOL)shouldIgnoreUpdatesToThisTarget;	// 0x7f47c1
-(void)endProcessing;	// 0x7f4745
-(CGSize)maximumOutputSize;	// 0x7f4729
-(void)setInputSize:(CGSize)size atIndex:(int)index;	// 0x7f4725
-(void)setInputRotation:(int)rotation atIndex:(int)index;	// 0x7f4715
-(void)setInputFramebuffer:(id)framebuffer atIndex:(int)index;	// 0x7f464d
-(int)nextAvailableTextureIndex;	// 0x7f4649
-(void)newFrameReadyAtTime:(XXStruct_pwHToB)time atIndex:(int)index;	// 0x7f40d5
-(void)renderAtInternalSizeUsingFramebuffer:(id)internalSizeUsingFramebuffer;	// 0x7f3eb9
-(void)setFilterFBO;	// 0x7f3e51
-(void)destroyDataFBO;	// 0x7f3c9d
-(void)createDataFBO;	// 0x7f39e5
-(void)enableSynchronizationCallbacks;	// 0x7f39e1
-(void)processAudioBuffer:(opaqueCMSampleBuffer*)buffer;	// 0x7f3915
-(void)finishRecordingWithCompletionHandler:(id)completionHandler;	// 0x7f3665
-(void)finishRecording;	// 0x7f3651
-(void)cancelRecording;	// 0x7f3455
-(void)startRecordingInOrientation:(CGAffineTransform)orientation;	// 0x7f3401
-(void)startRecording;	// 0x7f33b1
-(void)initializeMovieWithOutputSettings:(id)outputSettings;	// 0x7f2aad
-(void)dealloc;	// 0x7f29ad
-(id)initWithMovieURL:(id)movieURL size:(CGSize)size fileType:(id)type outputSettings:(id)settings;	// 0x7f20fd
-(id)initWithMovieURL:(id)movieURL size:(CGSize)size;	// 0x7f20c1
-(id)initWithSize:(CGSize)size;	// 0x7f2085
-(id)imageFromSampleBuffer:(opaqueCMSampleBuffer*)sampleBuffer;	// 0x7f1f35
-(void)willOutputSampleBuffer:(opaqueCMSampleBuffer*)buffer;	// 0x7f1e3d
@end

