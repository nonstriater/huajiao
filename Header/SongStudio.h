/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "AVAudioSessionDelegate.h"
#import "AudioStreamProcessDelegate.h"

@class NSArray, NSString, Effect;
@protocol PlayerProtocol, SongStudioDelegate, SongProtocol;

@interface SongStudio : XXUnknownSuperclass <AVAudioSessionDelegate, AudioStreamProcessDelegate> {
	id<PlayerProtocol> playerDelegate;
	int status;
	int pendingEvent;
	BOOL playing;
	BOOL interruptedDuringPlayback;
	double graphSampleRate;
	BOOL paused;
	NSArray* effectNameArray;
	int _effectOption;
	id<SongStudioDelegate> _delegate;
	id<SongProtocol> _song;
	id<SongProtocol> _recorder;
	id<SongProtocol> _mixer;
	Effect* _effect;
}
@property(readonly, copy) NSString* debugDescription;
@property(readonly, copy) NSString* description;
@property(readonly, assign) Class superclass;
@property(readonly, assign) unsigned hash;
@property(assign) id<PlayerProtocol> playerDelegate;	// G=0x4a06f9; S=0x4a0709; 
@property(retain) Effect* effect;	// G=0x4a07c9; S=0x4a07dd; 
@property(readonly, retain) NSArray* effectNameArray;	// G=0x4a0719; 
@property(retain) id<SongProtocol> mixer;	// G=0x4a07a5; S=0x4a07b9; 
@property(retain) id<SongProtocol> recorder;	// G=0x4a0781; S=0x4a0795; 
@property(retain) id<SongProtocol> song;	// G=0x4a075d; S=0x4a0771; 
@property(readonly, assign) int status;	// G=0x4a0639; 
@property(assign) BOOL interruptedDuringPlayback;	// G=0x4a066d; S=0x4a0681; 
@property(readonly, assign, nonatomic) double absoluteTime;	// G=0x4a04f1; 
@property(readonly, assign, nonatomic) double currentTime;	// G=0x4a04d1; 
@property(assign, nonatomic) id<SongStudioDelegate> delegate;	// G=0x4a073d; S=0x4a074d; 
@property(assign, nonatomic) int effectOption;	// G=0x4a072d; S=0x4a0021; 
@property(assign) double graphSampleRate;	// G=0x4a0691; S=0x4a06c5; 
@property(assign, getter=isPlaying) BOOL playing;	// G=0x4a0649; S=0x4a065d; 
-(void)observeValueForKeyPath:(id)keyPath ofObject:(id)object change:(id)change context:(void*)context;	// 0x4a056d
-(int)pitch;	// 0x4a053d
-(void)setPitch:(int)pitch;	// 0x4a0511
-(int)playerStatus;	// 0x4a0001
-(id)getObserver;	// 0x49fff1
-(id)getEffect;	// 0x49ffc9
-(void)doAction:(int)action;	// 0x49fc25
-(int)nextAction:(int)action;	// 0x49fb8d
-(void)stateSwitch:(int)aSwitch;	// 0x49fb45
-(void)triggerEvent:(int)event;	// 0x49faf9
-(void)enableEffect:(BOOL)effect;	// 0x49fad5
-(void)setEffectParam:(float)param wet:(float)wet dry:(float)dry mode:(float)mode width:(float)width damp:(float)damp;	// 0x49f9b9
-(void)selectEffect:(int)effect;	// 0x49f6a9
-(void)setBassLevel:(float)level;	// 0x49f611
-(void)setEQParam:(int)param gain:(float)gain;	// 0x49f5e1
-(void)selectEQPresetIndex:(int)index;	// 0x49f5dd
-(double)duration;	// 0x49f5a5
-(void)cancel;	// 0x49f591
-(void)redo;	// 0x49f57d
-(void)commit;	// 0x49f569
-(void)soundEffect:(int)effect;	// 0x49f555
-(float)getVolume:(int)volume;	// 0x49f535
-(void)setVolume:(int)volume volume:(float)volume2;	// 0x49f515
-(void)stop;	// 0x49f4dd
-(void)resume;	// 0x49f4a9
-(void)pause;	// 0x49f469
-(void)record;	// 0x49f229
-(void)preview;	// 0x49f1f9
-(void)attachSong:(id)song;	// 0x49ef21
-(id)pathForType:(int)type;	// 0x49ed6d
-(void)dealloc;	// 0x49ec21
-(id)init;	// 0x49e851
-(void)changeHeadphoneRoute:(id)route;	// 0x49e811
-(void)setupAudioSession;	// 0x49e2f9
-(void)audioSessionDidChangeInterruptionType:(id)audioSession;	// 0x49e1d1
-(void)audioStreamProcess:(id)process dataArrived:(id)arrived pts:(float)pts;	// 0x49e1b1
@end

