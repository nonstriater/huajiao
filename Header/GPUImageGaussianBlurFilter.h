/**
 * This header is generated by class-dump-z 0.2a.
 * class-dump-z is Copyright (C) 2009 by KennyTM~, licensed under GPLv3.
 *
 * Source: (null)
 */

#import "living-Structs.h"
#import "GPUImageTwoPassTextureSamplingFilter.h"


@interface GPUImageGaussianBlurFilter : GPUImageTwoPassTextureSamplingFilter {
	BOOL shouldResizeBlurRadiusWithImageSize;
	float _blurRadiusInPixels;
	float _texelSpacingMultiplier;
	float _blurRadiusAsFractionOfImageWidth;
	float _blurRadiusAsFractionOfImageHeight;
	unsigned _blurPasses;
}
@property(assign, nonatomic) unsigned blurPasses;	// G=0x831579; S=0x831589; 
@property(assign, nonatomic) float blurRadiusAsFractionOfImageHeight;	// G=0x831569; S=0x8314cd; 
@property(assign, nonatomic) float blurRadiusAsFractionOfImageWidth;	// G=0x831559; S=0x831461; 
@property(assign, nonatomic) float blurRadiusInPixels;	// G=0x831549; S=0x831311; 
@property(assign, nonatomic) float texelSpacingMultiplier;	// G=0x831539; S=0x831299; 
+(id)fragmentShaderForOptimizedBlurOfRadius:(unsigned)radius sigma:(float)sigma;	// 0x830829
+(id)vertexShaderForOptimizedBlurOfRadius:(unsigned)radius sigma:(float)sigma;	// 0x8305a1
+(id)fragmentShaderForStandardBlurOfRadius:(unsigned)radius sigma:(float)sigma;	// 0x8303c1
+(id)vertexShaderForStandardBlurOfRadius:(unsigned)radius sigma:(float)sigma;	// 0x8302a5
-(void)switchToVertexShader:(id)vertexShader fragmentShader:(id)shader;	// 0x830c95
-(void)renderToTextureWithVertices:(const float*)vertices textureCoordinates:(const float*)coordinates;	// 0x830bf1
-(void)setupFilterForSize:(CGSize)size;	// 0x830b41
-(id)init;	// 0x83020d
-(id)initWithFirstStageVertexShaderFromString:(id)string firstStageFragmentShaderFromString:(id)string2 secondStageVertexShaderFromString:(id)string3 secondStageFragmentShaderFromString:(id)string4;	// 0x830151
@end

